map[string]interface {}{
    "components": map[string]interface {}{
        "schemas": map[string]interface {}{
            "Code": map[string]interface {}{
                "description": "github.com/ysmood/goapi/lib/openapi.Code",
                "enum": []interface {}{
                    "conflict",
                    "forbidden",
                    "internal_error",
                    "invalid_param",
                    "not_found",
                    "timeout",
                    "too_large",
                    "too_many_requests",
                    "unauthorized",
                },
                "title": "Code",
            },
            "CommonError": map[string]interface {}{
                "additionalProperties": false,
                "description": "github.com/ysmood/goapi/lib/openapi.CommonError[github.com/ysmood/goapi/lib/openapi.Code]",
                "properties": map[string]interface {}{
                    "code": map[string]interface {}{
                        "$ref": "#/components/schemas/Code",
                    },
                    "details": map[string]interface {}{
                        "items": map[string]interface {}{
                            "$ref": "#/components/schemas/CommonError",
                        },
                        "type": "array",
                    },
                    "innererror": map[string]interface {}{},
                    "message": map[string]interface {}{
                        "type": "string",
                    },
                    "target": map[string]interface {}{
                        "type": "string",
                    },
                },
                "required": []interface {}{
                    "code",
                },
                "title": "CommonError[github.com/ysmood/goapi/lib/openapi.Code]",
                "type": "object",
            },
            "Error": map[string]interface {}{
                "additionalProperties": false,
                "description": "github.com/ysmood/goapi/lib/openapi.Error",
                "properties": map[string]interface {}{
                    "code": map[string]interface {}{
                        "$ref": "#/components/schemas/Code",
                    },
                    "details": map[string]interface {}{
                        "items": map[string]interface {}{
                            "$ref": "#/components/schemas/CommonError",
                        },
                        "type": "array",
                    },
                    "innererror": map[string]interface {}{},
                    "message": map[string]interface {}{
                        "type": "string",
                    },
                    "target": map[string]interface {}{
                        "type": "string",
                    },
                },
                "required": []interface {}{
                    "code",
                },
                "title": "Error",
                "type": "object",
            },
        },
    },
    "info": map[string]interface {}{
        "title": "",
        "version": "",
    },
    "openapi": "3.1.0",
    "paths": map[string]interface {}{
        "/five": map[string]interface {}{
            "get": map[string]interface {}{
                "operationId": "func7",
                "responses": map[string]interface {}{
                    "200": map[string]interface {}{
                        "content": map[string]interface {}{
                            "image/png": map[string]interface {}{
                                "schema": map[string]interface {}{
                                    "format": "binary",
                                    "type": "string",
                                },
                            },
                        },
                        "description": "OK",
                    },
                },
            },
        },
        "/four": map[string]interface {}{
            "get": map[string]interface {}{
                "operationId": "fnFour",
                "responses": map[string]interface {}{
                    "200": map[string]interface {}{
                        "content": map[string]interface {}{
                            "application/octet-stream": map[string]interface {}{
                                "schema": map[string]interface {}{
                                    "format": "binary",
                                    "type": "string",
                                },
                            },
                        },
                        "description": "OK",
                    },
                },
            },
        },
        "/one": map[string]interface {}{
            "get": map[string]interface {}{
                "description": "test endpoint",
                "operationId": "one",
                "parameters": []interface {}{
                    map[string]interface {}{
                        "description": "id",
                        "examples": map[string]interface {}{
                            "0": map[string]interface {}{
                                "summary": `"456"`,
                                "value": "456",
                            },
                        },
                        "in": "query",
                        "name": "id",
                        "schema": map[string]interface {}{
                            "default": "123",
                            "examples": []interface {}{
                                "456",
                            },
                            "type": "string",
                        },
                    },
                    map[string]interface {}{
                        "description": "type code",
                        "in": "query",
                        "name": "type",
                        "schema": map[string]interface {}{
                            "$ref": "#/components/schemas/Code",
                        },
                    },
                    map[string]interface {}{
                        "in": "header",
                        "name": "ua",
                        "required": true,
                        "schema": map[string]interface {}{
                            "type": "string",
                        },
                    },
                },
                "requestBody": map[string]interface {}{
                    "content": map[string]interface {}{
                        "application/json": map[string]interface {}{
                            "schema": map[string]interface {}{
                                "additionalProperties": false,
                                "properties": map[string]interface {}{
                                    "data": map[string]interface {}{
                                        "type": "string",
                                    },
                                },
                                "required": []interface {}{
                                    "data",
                                },
                                "type": "object",
                            },
                        },
                    },
                    "required": true,
                },
                "responses": map[string]interface {}{
                    "200": map[string]interface {}{
                        "content": map[string]interface {}{
                            "application/json": map[string]interface {}{
                                "schema": map[string]interface {}{
                                    "additionalProperties": false,
                                    "properties": map[string]interface {}{
                                        "data": map[string]interface {}{
                                            "type": "string",
                                        },
                                    },
                                    "required": []interface {}{
                                        "data",
                                    },
                                    "type": "object",
                                },
                            },
                        },
                        "description": "OK",
                        "headers": map[string]interface {}{
                            "set-cookie": map[string]interface {}{
                                "schema": map[string]interface {}{
                                    "type": "string",
                                },
                            },
                        },
                    },
                    "403": map[string]interface {}{
                        "content": map[string]interface {}{
                            "application/json": map[string]interface {}{
                                "schema": map[string]interface {}{
                                    "additionalProperties": false,
                                    "properties": map[string]interface {}{
                                        "error": map[string]interface {}{
                                            "$ref": "#/components/schemas/Error",
                                        },
                                    },
                                    "required": []interface {}{
                                        "error",
                                    },
                                    "type": "object",
                                },
                            },
                        },
                        "description": "returns 403",
                    },
                },
                "security": []interface {}{
                    map[string]interface {}{
                        "auth": []interface {}{
                            "read",
                        },
                    },
                },
                "summary": "test",
                "tags": []interface {}{
                    "test",
                },
            },
        },
        "/three": map[string]interface {}{
            "get": map[string]interface {}{
                "operationId": "func5",
                "responses": map[string]interface {}{
                    "200": map[string]interface {}{
                        "content": map[string]interface {}{
                            "application/json": map[string]interface {}{
                                "schema": map[string]interface {}{
                                    "type": "string",
                                },
                            },
                        },
                        "description": "OK",
                    },
                },
            },
            "post": map[string]interface {}{
                "operationId": "func6",
                "responses": map[string]interface {}{
                    "200": map[string]interface {}{
                        "content": map[string]interface {}{
                            "application/json": map[string]interface {}{
                                "schema": map[string]interface {}{
                                    "type": "string",
                                },
                            },
                        },
                        "description": "OK",
                    },
                },
            },
        },
        "/two/{id}": map[string]interface {}{
            "get": map[string]interface {}{
                "operationId": "func4",
                "parameters": []interface {}{
                    map[string]interface {}{
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": map[string]interface {}{
                            "type": "string",
                        },
                    },
                },
                "responses": map[string]interface {}{
                    "200": map[string]interface {}{
                        "content": map[string]interface {}{
                            "application/json": map[string]interface {}{
                                "schema": map[string]interface {}{
                                    "additionalProperties": false,
                                    "properties": map[string]interface {}{
                                        "data": map[string]interface {}{
                                            "type": "string",
                                        },
                                        "meta": map[string]interface {}{
                                            "type": "string",
                                        },
                                    },
                                    "required": []interface {}{
                                        "data",
                                        "meta",
                                    },
                                    "type": "object",
                                },
                            },
                        },
                        "description": "OK",
                    },
                },
            },
        },
    },
}